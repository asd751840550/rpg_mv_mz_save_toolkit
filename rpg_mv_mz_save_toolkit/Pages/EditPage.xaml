<UserControl x:Class="rpg_mv_mz_save_toolkit.Pages.EditPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:rpg_mv_mz_save_toolkit.Pages"
             xmlns:kui="http://kihaw.com/RPGSaveToolkit/UI"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             TextElement.Foreground="{DynamicResource KForegroundColor}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance kui:EditPageViewModel}">
    <UserControl.Resources>
        <kui:TreeViewToIconPackConverter x:Key="TreeViewToIconPackConverter"/>
        <kui:BooleanToVisibilityMultiConverter x:Key="BooleanToVisibilityMultiConverter"/>
        <kui:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Gesture="Enter" Command="{Binding SearchCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:EditPage}}"/>
    </UserControl.InputBindings>
    <Grid Background="{DynamicResource KBackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="16 6">
                <Button Margin="6 6 12 6" Style="{StaticResource KIconButton}">
                    <iconPacks:PackIconMaterial Width="21" Height="21" Kind="ExitToApp"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:CallMethodAction TargetObject="{Binding}" MethodName="BtnExit_Clicked"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Margin="6 6">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Upload"/>
                            <TextBlock Margin="4 0" Text="Load File"/>
                        </StackPanel>
                    </Button.Content>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:CallMethodAction TargetObject="{Binding}" MethodName="BtnLoad_Clicked"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Margin="12 6 6 6">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="Download"/>
                            <TextBlock Margin="4 0" Text="Save File"/>
                        </StackPanel>
                    </Button.Content>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:CallMethodAction TargetObject="{Binding}" MethodName="BtnSave_Clicked"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>

            <Border Grid.Column="1" Margin="20 8" Background="#FF808080" CornerRadius="15">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Margin="6 0" Foreground="White" FontSize="20" Background="Transparent" BorderThickness="0" VerticalAlignment="Center"
                             TextAlignment="Center" Tag="Search..."
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="CaretBrush" Value="{DynamicResource KCaretBrushColor}"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TextBoxBase">
                                            <Grid>
                                                <Border x:Name="border" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                </Border>

                                                <TextBlock IsHitTestVisible="False" Panel.ZIndex="-1"
                                                       Text="{TemplateBinding Tag}"
                                                       x:Name="placeholder"
                                                       FontFamily="{TemplateBinding FontFamily}"
                                                       Padding="{TemplateBinding Padding}"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                       Foreground="{DynamicResource KPlaceholderColor}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Button Style="{StaticResource KIconButton}" Grid.Column="1">
                        <iconPacks:PackIconMaterial Margin="10 4" Width="20" Height="20" VerticalAlignment="Center" Kind="Magnify"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:CallMethodAction TargetObject="{Binding}" MethodName="BtnSearch_Clicked"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Border>
        </Grid>
        <TreeView Margin="2" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding JObjectTrees}" Background="{DynamicResource KBackgroundColorLight}"
                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:CallMethodAction TargetObject="{Binding}" MethodName="TreeJobject_SelectedItemChanged"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.Resources>
                <Style TargetType="ToggleButton">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid Width="25" Height="25" Background="Transparent" SnapsToDevicePixels="True">
                                    <iconPacks:PackIconMaterial VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="iconPack" Kind="ChevronRight"
                                     Foreground="#FFA0A0A0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="iconPack" Property="Kind" Value="ChevronDown"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="iconPack" Property="Foreground" Value="#FFFFFFFF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.Resources>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type kui:JsonObjectTreeTitleViewModel}" ItemsSource="{Binding ChildTitles}">
                    <Border Padding="10 2" CornerRadius="6">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Margin="2 0 6 0" VerticalAlignment="Center">
                                <iconPacks:PackIconMaterial.Kind>
                                    <MultiBinding Converter="{StaticResource TreeViewToIconPackConverter}" ConverterParameter="icon">
                                        <Binding Path="IsExpanded" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                        <Binding Path="ChildTitles"/>
                                    </MultiBinding>
                                </iconPacks:PackIconMaterial.Kind>
                                <iconPacks:PackIconMaterial.Foreground>
                                    <MultiBinding Converter="{StaticResource TreeViewToIconPackConverter}" ConverterParameter="color">
                                        <Binding Path="IsExpanded" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                        <Binding Path="ChildTitles"/>
                                    </MultiBinding>
                                </iconPacks:PackIconMaterial.Foreground>
                            </iconPacks:PackIconMaterial>
                            <TextBlock Foreground="{DynamicResource KForegroundColor}" Text="{Binding Title}"/>
                            <TextBlock Margin="20 0" FontSize="12" VerticalAlignment="Center" Foreground="LightGray" 
                                       Text="{Binding Description}" ToolTip="{Binding Description}">
                                <TextBlock.Visibility>
                                    <MultiBinding Converter="{StaticResource BooleanToVisibilityMultiConverter}">
                                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                        <Binding Path="IsSelected" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                    </MultiBinding>
                                </TextBlock.Visibility>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="22"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.ColumnSpan="2" Margin="0,0,0,0"  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true"/>
                                    <ToggleButton  x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="#FF808080"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="#FF808080"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>-->
                    <!--<Style.Resources>
                        --><!--SelectedItem with focus--><!--
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightSkyBlue" Opacity=".5"/>
                        --><!--SelectedItem without focus--><!--
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightSkyBlue" Opacity=".5"/>
                    </Style.Resources>-->
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Margin="2" IsReadOnly="True" Visibility="Hidden" Foreground="White" BorderThickness="0" CaretBrush="{DynamicResource KCaretBrushColor}"
                     VerticalScrollBarVisibility="Auto" Background="{DynamicResource KBackgroundColorLight}"
                     AcceptsReturn="True" Text="{Binding SelectedItemJson, UpdateSourceTrigger=PropertyChanged}"/>
            <ScrollViewer Margin="2" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Background="{DynamicResource KBackgroundColorLight}">
                <ItemsControl ItemsSource="{Binding JsonObjectsItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="kui:JsonObjectTreeItemViewModel">
                            <Grid Margin="20 6">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="18"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="FontSize" Value="18"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.ColumnSpan="3" Margin="0 6" Orientation="Horizontal">
                                    <iconPacks:PackIconMaterial Foreground="LightGreen" Kind="ResistorNodes" VerticalAlignment="Center"/>
                                    <TextBlock Margin="6 0" FontSize="14" Text="{Binding Path}"/>

                                    <TextBlock Margin="60 0 0 0" Foreground="Red" FontSize="14" Text="Changed" Visibility="{Binding IsChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                                
                                <TextBlock Grid.Row="1" Margin="20 0 0 0" Grid.Column="0" Text="{Binding Key}"/>
                                <TextBlock Grid.Row="1" Margin="4 0" Grid.Column="1" Text=" : "/>
                                <Border Grid.Row="1" Grid.Column="2" Background="#FF7B6794" CornerRadius="12">
                                    <TextBox Margin="6" Background="Transparent" Foreground="White" CaretBrush="{DynamicResource KCaretBrushColor}" BorderThickness="0" 
                                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                                <Separator Margin="0 4" Grid.Row="2" Grid.ColumnSpan="3" Background="#FF606060"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
